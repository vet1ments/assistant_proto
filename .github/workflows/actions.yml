name: push-grpc-go

on:
  push:
    tags:
      - '*'
jobs:
  install-buf:
    runs-on: ubuntu-latest
    steps:
      - name: setUp python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install grpclib protobuf
      - name: Checkout assistant_proto code
        uses: actions/checkout@v4
      - name: Set up NodeJS 20.17.0
        uses: actions/setup-node@v2
        with:
          node-version: 20.17.0
          registry-url: https://registry.npmjs.org/

      - name: Install Dependencies
        run: |
          npm install --save-dev @bufbuild/buf @connectrpc/protoc-gen-connect-es@"^1.0.0" @bufbuild/protoc-gen-es@"^1.0.0"
          npm install @connectrpc/connect@"^1.0.0" @connectrpc/connect-web@"^1.0.0" @bufbuild/protobuf@"^1.0.0"
          npx buf --version
          npm install

      - name: dep update
        run: |
          npx buf dep update
          npx buf generate --include-imports

      - name: git config
        run: |
          git config --global user.name "vet1ments"
          git config --global user.email "vet1ments@naver.com"

      - name: Extract tag name
        id: tag
        run: echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}

      - name: update ts
        continue-on-error: true
        env:
          TOKEN: ${{secrets.Secret}}
        run: |
          git clone https://user:$TOKEN@github.com/vet1ments/grpc-oauth-ts
          rm -r ./grpc-oauth-ts/*
          cd grpc-oauth-ts
          cp  -r ../ts/* ./
          git add .
          git commit -m "${{ steps.tag.outputs.TAG_NAME }} update"
          git push origin master
          git tag ${{ steps.tag.outputs.TAG_NAME }}
          git push origin ${{ steps.tag.outputs.TAG_NAME }}
          cd ..
          rm -rf ./grpc-oauth-ts

      - name: update go
        continue-on-error: true
        env:
          TOKEN: ${{secrets.Secret}}
        run: |
          git clone https://user:$TOKEN@github.com/vet1ments/grpc-oauth-go
          rm -r ./grpc-oauth-go/*
          cd grpc-oauth-go

          cp -r ../go/grpcoauth/* ./ 

          go mod init github.com/vet1ments/grpc-oauth-go
          go mod tidy


          git add .
          git commit -m "${{ steps.tag.outputs.TAG_NAME }} update"
          git push origin master
          git tag ${{ steps.tag.outputs.TAG_NAME }}
          git push origin ${{ steps.tag.outputs.TAG_NAME }}
          rm -rf ./grpc-oauth-go
      - name: update py
        continue-on-error: true
        env:
          TOKEN: ${{secrets.Secret}}
        run: |
          git clone https://user:$TOKEN@github.com/vet1ments/grpc-oauth-python
          
          find grpc-oauth-python -mindepth 1 -not -path "grpc-oauth-python/.gitflow" -not -path "grpc-oauth-python/.gitflow/*" -exec  rm -rf {} +
          ls
          
          cd grpc-oauth-python
          ls
          cp -r ../python/* ./
          
          VERSION=${{ steps.tag.outputs.TAG_NAME }}
          VERSION=${VERSION#v}
          touch setup.py
          cat > setup.py << EOF
          from setuptools import find_packages, setup
          setup(
          name="grpc-oauth-vet1ments",
          version="{{VERSION_PLACEHOLDER}}",
          description="assistant proto",
          author="vet1ments",
          author_email="https://github.com/vet1ments/grpc-oauth-python.git",
          packages=find_packages(exclude=[]),
          python_requires=">=3.11"
          )
          EOF
          
          python -m pip freeze > requirements.txt
          sed -i "s/{{VERSION_PLACEHOLDER}}/$VERSION/g" setup.py

          
          git add .
          git commit -m "${{ steps.tag.outputs.TAG_NAME }} update"
          git push origin master
          git tag ${{ steps.tag.outputs.TAG_NAME }}
          git push origin ${{ steps.tag.outputs.TAG_NAME }}
          rm -rf ./grpc-oauth-python
