# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from grpcoauth.v1 import oauth_pb2 as grpcoauth_dot_v1_dot_oauth__pb2


class OauthServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetOauthAppTokenInfo = channel.unary_unary(
                '/grpcoauth.v1.OauthService/GetOauthAppTokenInfo',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppTokenInfoRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppTokenInfoResponse.FromString,
                _registered_method=True)
        self.GetOauthAppUser = channel.unary_unary(
                '/grpcoauth.v1.OauthService/GetOauthAppUser',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserResponse.FromString,
                _registered_method=True)
        self.GetOauthAppUserList = channel.unary_unary(
                '/grpcoauth.v1.OauthService/GetOauthAppUserList',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserListRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserListResponse.FromString,
                _registered_method=True)
        self.CreateOauthAdminApp = channel.unary_unary(
                '/grpcoauth.v1.OauthService/CreateOauthAdminApp',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthAdminAppRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthAdminAppResponse.FromString,
                _registered_method=True)
        self.CreateOauthUserApp = channel.unary_unary(
                '/grpcoauth.v1.OauthService/CreateOauthUserApp',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthUserAppRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthUserAppResponse.FromString,
                _registered_method=True)
        self.GetAuthorizeCode = channel.unary_unary(
                '/grpcoauth.v1.OauthService/GetAuthorizeCode',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeCodeRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeCodeResponse.FromString,
                _registered_method=True)
        self.GetToken = channel.unary_unary(
                '/grpcoauth.v1.OauthService/GetToken',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetTokenRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetTokenResponse.FromString,
                _registered_method=True)
        self.GetAccessTokenInfo = channel.unary_unary(
                '/grpcoauth.v1.OauthService/GetAccessTokenInfo',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAccessTokenInfoRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAccessTokenInfoResponse.FromString,
                _registered_method=True)
        self.GetAuthorizeUrl = channel.unary_unary(
                '/grpcoauth.v1.OauthService/GetAuthorizeUrl',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeUrlResponse.FromString,
                _registered_method=True)


class OauthServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetOauthAppTokenInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOauthAppUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOauthAppUserList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOauthAdminApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOauthUserApp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAuthorizeCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccessTokenInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAuthorizeUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OauthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetOauthAppTokenInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOauthAppTokenInfo,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppTokenInfoRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppTokenInfoResponse.SerializeToString,
            ),
            'GetOauthAppUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOauthAppUser,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserResponse.SerializeToString,
            ),
            'GetOauthAppUserList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOauthAppUserList,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserListRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserListResponse.SerializeToString,
            ),
            'CreateOauthAdminApp': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOauthAdminApp,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthAdminAppRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthAdminAppResponse.SerializeToString,
            ),
            'CreateOauthUserApp': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOauthUserApp,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthUserAppRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthUserAppResponse.SerializeToString,
            ),
            'GetAuthorizeCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAuthorizeCode,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeCodeRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeCodeResponse.SerializeToString,
            ),
            'GetToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetToken,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetTokenRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetTokenResponse.SerializeToString,
            ),
            'GetAccessTokenInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAccessTokenInfo,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAccessTokenInfoRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAccessTokenInfoResponse.SerializeToString,
            ),
            'GetAuthorizeUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAuthorizeUrl,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeUrlResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcoauth.v1.OauthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpcoauth.v1.OauthService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OauthService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetOauthAppTokenInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/GetOauthAppTokenInfo',
            grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppTokenInfoRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppTokenInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOauthAppUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/GetOauthAppUser',
            grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetOauthAppUserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/GetOauthAppUserList',
            grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserListRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.GetOauthAppUserListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOauthAdminApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/CreateOauthAdminApp',
            grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthAdminAppRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthAdminAppResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateOauthUserApp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/CreateOauthUserApp',
            grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthUserAppRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.CreateOauthUserAppResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAuthorizeCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/GetAuthorizeCode',
            grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeCodeRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeCodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/GetToken',
            grpcoauth_dot_v1_dot_oauth__pb2.GetTokenRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.GetTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAccessTokenInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/GetAccessTokenInfo',
            grpcoauth_dot_v1_dot_oauth__pb2.GetAccessTokenInfoRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.GetAccessTokenInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAuthorizeUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthService/GetAuthorizeUrl',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.GetAuthorizeUrlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class OauthCallbackServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NativeCallback = channel.unary_unary(
                '/grpcoauth.v1.OauthCallbackService/NativeCallback',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.NativeCallbackRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.NativeCallbackResponse.FromString,
                _registered_method=True)
        self.KakaoCallback = channel.unary_unary(
                '/grpcoauth.v1.OauthCallbackService/KakaoCallback',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.KakaoCallbackRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.KakaoCallbackResponse.FromString,
                _registered_method=True)
        self.NaverCallback = channel.unary_unary(
                '/grpcoauth.v1.OauthCallbackService/NaverCallback',
                request_serializer=grpcoauth_dot_v1_dot_oauth__pb2.NaverCallbackRequest.SerializeToString,
                response_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.NaverCallbackResponse.FromString,
                _registered_method=True)


class OauthCallbackServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NativeCallback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def KakaoCallback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NaverCallback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OauthCallbackServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NativeCallback': grpc.unary_unary_rpc_method_handler(
                    servicer.NativeCallback,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.NativeCallbackRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.NativeCallbackResponse.SerializeToString,
            ),
            'KakaoCallback': grpc.unary_unary_rpc_method_handler(
                    servicer.KakaoCallback,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.KakaoCallbackRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.KakaoCallbackResponse.SerializeToString,
            ),
            'NaverCallback': grpc.unary_unary_rpc_method_handler(
                    servicer.NaverCallback,
                    request_deserializer=grpcoauth_dot_v1_dot_oauth__pb2.NaverCallbackRequest.FromString,
                    response_serializer=grpcoauth_dot_v1_dot_oauth__pb2.NaverCallbackResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'grpcoauth.v1.OauthCallbackService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('grpcoauth.v1.OauthCallbackService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class OauthCallbackService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NativeCallback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthCallbackService/NativeCallback',
            grpcoauth_dot_v1_dot_oauth__pb2.NativeCallbackRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.NativeCallbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def KakaoCallback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthCallbackService/KakaoCallback',
            grpcoauth_dot_v1_dot_oauth__pb2.KakaoCallbackRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.KakaoCallbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def NaverCallback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/grpcoauth.v1.OauthCallbackService/NaverCallback',
            grpcoauth_dot_v1_dot_oauth__pb2.NaverCallbackRequest.SerializeToString,
            grpcoauth_dot_v1_dot_oauth__pb2.NaverCallbackResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
